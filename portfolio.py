# Calculates the expected return, variance, standard deviation, and Sharpe ratio of a portfolio consisting of two stocks generated by the generate_weights function.
class Portfolio:
 def __init__(self, weight1, weight2, ExpectedReturn1, ExpectedReturn2, variance1, variance2, stockCorrelation, ExpectedSD1, ExpectedSD2, RiskFreeRate):
  self.weight1 = weight1
  self.weight2 = weight2
  self.ExpectedReturn1 = ExpectedReturn1
  self.ExpectedReturn2 = ExpectedReturn2
  self.variance1 = variance1
  self.variance2 = variance2
  self.stockCorrelation = stockCorrelation
  self.ExpectedSD1 = ExpectedSD1
  self.ExpectedSD2 = ExpectedSD2
  self.RiskFreeRate = RiskFreeRate

 def expected_return(self):
  return (self.weight1 * self.ExpectedReturn1) + (self.weight2 * self.ExpectedReturn2)

 def expected_variance(self):
  return ((self.weight1 ** 2) * self.variance1) + ((self.weight2 ** 2) * self.variance2) + (2 * self.weight1 * self.weight2 * self.stockCorrelation * self.ExpectedSD1 * self.ExpectedSD2)

 def expected_std_dev(self):
  return self.expected_variance() ** 0.5

 def sharpe_ratio(self):
  return (self.expected_return() - self.RiskFreeRate) / self.expected_std_dev()
